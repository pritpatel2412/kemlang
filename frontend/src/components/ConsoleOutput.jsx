"use client"

import { useRef, useEffect, useMemo } from "react"

export default function ConsoleOutput({ output, error }) {
  const consoleRef = useRef(null)

  useEffect(() => {
    if (consoleRef.current) {
      consoleRef.current.scrollTop = consoleRef.current.scrollHeight
    }
  }, [output])

  const successMessages = [
    "üéØ ‡™ù‡™ï‡™æ‡™∏! Even the compiler is happy!",
    "üß† ‡™∏‡™∞‡™∏ ‡™ï‡™æ‡™Æ ‡™≠‡™æ‡™à, Debugger  ‡™™‡™£ ‡™ä‡™Ç‡™ò‡´Ä ‡™ó‡™Ø‡´ã! Peace mode ON!",
    "‚ö° Code ‡™è‡™ü‡™≤‡´ã fast ‡™ï‡´á CPUs react ‚Äî 'Bro, slow down!'",
    "üöÄ Compilation complete ‚Äî Launch mode activated!",
    "üåà This isn't just code, it's pure ‡™Ö‡™¶‡´ç‡™≠‡´Å‡™§ creativity!",
    "üé¨ What a script! Bollywood-level execution confirmed!",
    "üéâ Console literally clapped ‚Äî Standing ovation deserved!",
    "üì¶ Functions delivered successfully ‚Äî Prime speed, zero delay!",
    "ü•Å Logic ‡™è‡™µ‡´Å‡™Ç dangerous ‡™ï‡´á mind blown üí•!",
    "üìà KemLang ‡™™‡™£ ‡™ñ‡´Å‡™∂ ‚Äî ‡™ï‡´á ‡™µ‡™æ‡™™‡™∞‡™®‡™æ‡™∞ ‡™è‡™µ‡´ã next-level!",
    "üß© Bug? What‚Äôs that? Perfect fit achieved!",
    "üí° Idea ‡™è‡™ü‡™≤‡´Å‡™Ç solid ‡™ï‡´á AI ‡™™‡™£ pooche: 'kem no banavyo?'",
    "üéñÔ∏è KemLang Army welcomes its new Captain! ü´°",
    "üì£ Don‚Äôt stop now, greatness is literally calling your name!",
    "üö© Bro, you‚Äôre not a copy ‚Äî you‚Äôre the original source code!",
    "‚öôÔ∏è Code ‡™è‡™ü‡™≤‡´á artwork ‚Äî ‡™Ü ‡™§‡´ã masterpiece ‡™õ‡´á!",
    "‚ú® Tera logic chal gaya ‚Äî straight into the hall of fame!",
    "üì¢ Console ‡§¨‡•ã‡§≤‡•á: '‡™Ü‡™µ‡™æ coder ‡™®‡™æ ‡™§‡´ã fan ‡™¨‡™£‡´Ä ‡™ú‡™à‡™è!'",
    "üí´ Big brain energy detected. Keep flexing that logic!"
  ]

  const celebratoryMessage = useMemo(() => {
    if (!error && output) {
      const i = Math.floor(Math.random() * successMessages.length)
      return successMessages[i]
    }
    return null
  }, [output, error])

  return (
    <div
      ref={consoleRef}
      className="font-mono text-sm p-4 bg-[#0f0f18] text-white h-[300px] overflow-y-auto whitespace-pre-wrap rounded-md shadow-inner"
    >
      {error ? (
        <div className="text-red-400 font-semibold">{output || "‚ö†Ô∏è Error occurred."}</div>
      ) : (
        <>
          {celebratoryMessage && (
            <div className="text-pink-300 font-bold mb-2">
              {celebratoryMessage}
            </div>
          )}
          <div className="text-green-400">{output || "‚úÖ Run your code to see output here."}</div>
        </>
      )}
    </div>
  )
}
