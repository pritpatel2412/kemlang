# 🇮🇳 KemLang — Gujarati-Inspired Toy Programming Language

> **KemLang** is a beginner-friendly, desi-style toy programming language that speaks Gujarati vibes!
> Designed with love for learners, hobbyists, and everyone who thinks code should feel local and fun. 😄

---

## 🎯 Features

* ✅ Gujarati-style syntax: `sharu`, `jo`, `samaapt`, `lakho`, `jaano`, and more!
* 🧠 Beginner-friendly & readable structure
* 🧪 Comes with its own Lexer, Parser, and Evaluator
* 💻 CLI support — run `.kem` files right from your terminal
* 🌐 Integrated with FastAPI for web-based execution (optional)

---

## 📆 Installation

Install KemLang globally using [npm](https://www.npmjs.com/package/kemlang):

```bash
npm install -g kemlang
```

---

## ▶️ Usage

Write KemLang code in a file with the `.kem` extension.

### Example: `hello.kem`

```kemlang
sharu {
  do name = "KemLang";
  lakho("Kem cho " + name);
} samaapt
```

Run it:

```bash
kemlang hello.kem
```

Output:

```
Kem cho KemLang
```

---

## 🧹 Syntax Overview

| Feature       | KemLang Syntax                           | Description                  |
| ------------- | ---------------------------------------- | ---------------------------- |
| Start Program | `sharu {`                                | Start of the program         |
| End Program   | `} samaapt`                              | End of the program           |
| Print         | `lakho("text");`                         | Print output                 |
| Input         | `jaano a;`                               | Take input into variable `a` |
| Variable      | `do a = 10;`                             | Declare variable             |
| Reassign      | `a = 15;`                                | Change value                 |
| If-Else       | `jo (condition) { ... } nahitar { ... }` | Conditional                  |
| While Loop    | `jyaare (condition) { ... }`             | Loop                         |

---

## ❌ Error Messages — with Gujarati Flavour 😆

You'll love the friendly (and funny) error messages:

```bash
❌ Arre Bhai Bhai Bhai !!!
> su kare che tu??...Unexpected token: "}", expected: ";"
```

---

## 🧪 Dev / Backend Usage

KemLang uses FastAPI to serve execution requests.

### Run API Locally:

```bash
uvicorn cli:app --reload
```

Then POST code to `http://localhost:8000/run` with:

```json
{
  "code": "sharu { lakho(\"KemLang\"); } samaapt"
}
```

---

## 💠 Project Structure

```bash
kemlang/
├── bin/
│   └── kemlang.js        # CLI Entry
├── kemlang-backend/      # FastAPI + Compiler logic
│   ├── lexer.py
│   ├── parser.py
│   ├── evaluator.py
│   └── cli.py            # FastAPI Entry
├── package.json
└── README.md
```

---

## 🙌 Contribute

Pull Requests are welcome!
You can:

* Add new Gujarati-style keywords
* Enhance error messages
* Add more examples

---

## 📜 License

MIT © 2025 \[Your Name]

---

## ❤️ Inspired By

* [BhaiLang](https://github.com/DulLabs/bhai-lang)
* Native language coding movement
* Gujarati banter and humor 😄

---

### 🚀 Try Now

```bash
npm i -g kemlang
kemlang path/to/your/file.kem
```

Kem cho? Happy Coding! 🎉
